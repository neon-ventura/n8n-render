# render.yaml ‚Äî n8n + Postgres + Redis (privado) + Worker
# ------------------------------------------------------

databases:
  - name: n8n-postgres
    region: ohio          # üîß ajuste se quiser
    plan: free
    databaseName: n8n
    user: n8n
    ipAllowList: []

services:
  # ---------- Redis (private) ----------
  - type: pserv              # Private Service
    name: redis
    runtime: docker
    plan: starter
    region: ohio
    image:
      url: redis:7-alpine
    dockerCommand: >
      redis-server --requirepass redispass --appendonly yes
    port: 6379               # porta que o cont√™iner exp√µe
    disk:
      name: redis-data
      mountPath: /data
      sizeGB: 1

  # ---------- n8n Web (UI + API) ----------
  - type: web
    name: n8n-web
    runtime: docker
    plan: starter
    region: ohio
    image:
      url: n8nio/n8n:latest
    autoDeploy: false
    port: 5678
    envVars:
      # --- BASE URL (ajuste para seu dom√≠nio) ---
      - key: N8N_PROTOCOL
        value: https
      - key: N8N_HOST
        value: <SEU_DOMINIO>            # ex.: n8n-web.onrender.com
      - key: WEBHOOK_URL
        value: https://<SEU_DOMINIO>

      # --- Chave de criptografia ---
      - key: N8N_ENCRYPTION_KEY
        value: SuperSegredo123

      # --- Postgres (refer√™ncias autom√°ticas) ---
      - key: DB_TYPE
        value: postgresdb
      - fromDatabase:
          name: n8n-postgres
          property: host
        key: DB_POSTGRESDB_HOST
      - fromDatabase:
          name: n8n-postgres
          property: port
        key: DB_POSTGRESDB_PORT
      - fromDatabase:
          name: n8n-postgres
          property: database
        key: DB_POSTGRESDB_DATABASE
      - fromDatabase:
          name: n8n-postgres
          property: user
        key: DB_POSTGRESDB_USER
      - fromDatabase:
          name: n8n-postgres
          property: password
        key: DB_POSTGRESDB_PASSWORD

      # --- Redis / Bull ---
      - key: EXECUTIONS_MODE
        value: queue
      - key: QUEUE_BULL_REDIS_HOST
        value: redis
      - key: QUEUE_BULL_REDIS_PORT
        value: "6379"
      - key: QUEUE_BULL_REDIS_PASSWORD
        value: redispass

      # --- Workers habilitados ---
      - key: N8N_RUNNERS_ENABLED
        value: "true"
      - key: OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS
        value: "true"

      - key: NODE_ENV
        value: production
      - key: GENERIC_TIMEZONE
        value: America/Sao_Paulo

    disk:
      name: n8n-data
      mountPath: /home/node/.n8n
      sizeGB: 1

  # ---------- n8n Worker ----------
  - type: worker
    name: n8n-worker
    runtime: docker
    plan: starter
    region: ohio
    image:
      url: n8nio/n8n:latest
    dockerCommand: n8n worker
    envVars:
      - key: N8N_ENCRYPTION_KEY
        value: SuperSegredo123

      # --- Postgres ---
      - key: DB_TYPE
        value: postgresdb
      - fromDatabase:
          name: n8n-postgres
          property: host
        key: DB_POSTGRESDB_HOST
      - fromDatabase:
          name: n8n-postgres
          property: port
        key: DB_POSTGRESDB_PORT
      - fromDatabase:
          name: n8n-postgres
          property: database
        key: DB_POSTGRESDB_DATABASE
      - fromDatabase:
          name: n8n-postgres
          property: user
        key: DB_POSTGRESDB_USER
      - fromDatabase:
          name: n8n-postgres
          property: password
        key: DB_POSTGRESDB_PASSWORD

      # --- Redis ---
      - key: QUEUE_BULL_REDIS_HOST
        value: redis
      - key: QUEUE_BULL_REDIS_PORT
        value: "6379"
      - key: QUEUE_BULL_REDIS_PASSWORD
        value: redispass

      - key: EXECUTIONS_PROCESS
        value: main
      - key: NODE_ENV
        value: production
