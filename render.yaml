# render.yaml ‚îÄ n8n + Postgres + Redis
######################################
databases:
  - name: n8n-postgres           # üîß
    region: ohio
    plan: free
    databaseName: n8n
    user: n8n
    ipAllowList: []

services:
  #################################################################
  # Redis  (Web-service ‚Äúprivate‚Äù = acess√≠vel s√≥ dentro da VPC)
  #################################################################
  - type: web
    name: redis                  # hostname interno: redis:6379
    plan: starter
    region: ohio
    env: docker
    image:
      url: redis:7-alpine
    startCommand: >
      redis-server
      --requirepass redispass
      --appendonly yes
    port: 6379
    disk:
      name: redis-data
      mountPath: /data
      sizeGB: 1
    ingress:
      - from: private            # ‚Üê faz dele um servi√ßo interno

  #################################################################
  # n8n  (UI + API)
  #################################################################
  - type: web
    name: n8n-web                # üîß
    plan: starter
    region: ohio
    env: docker
    image:
      url: n8nio/n8n:latest
    autoDeploy: false
    port: 5678
    envVars:
      # --- BASE URL (mude depois para seu dom√≠nio) -------------
      - key: N8N_PROTOCOL
        value: https
      - key: N8N_HOST
        value: n8n-web.onrender.com      # Render gerar√° depois
      - key: WEBHOOK_URL
        value: https://n8n-web.onrender.com

      # --- Chave de criptografia --------------------------------
      - key: N8N_ENCRYPTION_KEY
        value: SuperSegredo123           # üîß

      # --- PostgreSQL -------------------------------------------
      - key: DB_TYPE
        value: postgresdb
      - fromDatabase:
          name: n8n-postgres
          property: host
        key: DB_POSTGRESDB_HOST
      - fromDatabase:
          name: n8n-postgres
          property: port
        key: DB_POSTGRESDB_PORT
      - fromDatabase:
          name: n8n-postgres
          property: database
        key: DB_POSTGRESDB_DATABASE
      - fromDatabase:
          name: n8n-postgres
          property: user
        key: DB_POSTGRESDB_USER
      - fromDatabase:
          name: n8n-postgres
          property: password
        key: DB_POSTGRESDB_PASSWORD

      # --- Redis / Bull -----------------------------------------
      - key: EXECUTIONS_MODE
        value: queue
      - key: QUEUE_BULL_REDIS_HOST
        value: redis
      - key: QUEUE_BULL_REDIS_PORT
        value: "6379"
      - key: QUEUE_BULL_REDIS_PASSWORD
        value: redispass

      # --- Permite usar workers ---------------------------------
      - key: N8N_RUNNERS_ENABLED
        value: "true"
      - key: OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS
        value: "true"

      - key: NODE_ENV
        value: production
      - key: GENERIC_TIMEZONE
        value: America/Sao_Paulo

    disk:
      name: n8n-data
      mountPath: /home/node/.n8n
      sizeGB: 1

  #################################################################
  # n8n WORKER (Background / Bull queue)
  #################################################################
  - type: worker
    name: n8n-worker
    plan: starter
    region: ohio
    env: docker
    image:
      url: n8nio/n8n:latest
    startCommand: n8n worker        # <‚îÄ difere do web
    envVars:
      - key: N8N_ENCRYPTION_KEY
        value: SuperSegredo123

      # --- PostgreSQL (reuso) -----------------------------------
      - fromDatabase:
          name: n8n-postgres
          property: host
        key: DB_POSTGRESDB_HOST
      - fromDatabase:
          name: n8n-postgres
          property: port
        key: DB_POSTGRESDB_PORT
      - fromDatabase:
          name: n8n-postgres
          property: database
        key: DB_POSTGRESDB_DATABASE
      - fromDatabase:
          name: n8n-postgres
          property: user
        key: DB_POSTGRESDB_USER
      - fromDatabase:
          name: n8n-postgres
          property: password
        key: DB_POSTGRESDB_PASSWORD
      - key: DB_TYPE
        value: postgresdb

      # --- Redis -------------------------------------------------
      - key: QUEUE_BULL_REDIS_HOST
        value: redis
      - key: QUEUE_BULL_REDIS_PORT
        value: "6379"
      - key: QUEUE_BULL_REDIS_PASSWORD
        value: redispass

      - key: EXECUTIONS_PROCESS
        value: main
      - key: NODE_ENV
        value: production
